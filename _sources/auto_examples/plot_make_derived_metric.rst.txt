
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples\plot_make_derived_metric.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_make_derived_metric.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_make_derived_metric.py:


======================
Making Derived Metrics 1
======================

.. GENERATED FROM PYTHON SOURCE LINES 10-31

This notebook demonstrates the use of the :func:`fairlearn.metrics.make_derived_metric`
function.
Many higher-order machine learning algorithms (such as hyperparameter tuners) make use
of scalar metrics when deciding how to proceed.
While the :class:`fairlearn.metrics.MetricFrame` has the ability to produce such
scalars through its aggregation functions, its API does not conform to that usually
expected by these algorithms.
The :func:`~fairlearn.metrics.make_derived_metric` function exists to bridge this gap.

Getting the Data
================

*This section may be skipped. It simply creates a dataset for
illustrative purposes*

We will use the well-known UCI 'Adult' dataset as the basis of this
demonstration. This is not for a lending scenario, but we will regard
it as one for the purposes of this example. We will use the existing
'race' and 'sex' columns (trimming the former to three unique values),
and manufacture credit score bands and loan sizes from other columns.
We start with some uncontroversial `import` statements:

.. GENERATED FROM PYTHON SOURCE LINES 31-47

.. code-block:: default


    import functools
    import numpy as np

    import sklearn.metrics as skm
    from sklearn.compose import ColumnTransformer
    from sklearn.datasets import fetch_openml
    from sklearn.impute import SimpleImputer
    from sklearn.linear_model import LogisticRegression
    from sklearn.model_selection import train_test_split
    from sklearn.preprocessing import StandardScaler, OneHotEncoder
    from sklearn.compose import make_column_selector as selector
    from sklearn.pipeline import Pipeline
    from fairlearn.metrics import MetricFrame, make_derived_metric
    from fairlearn.metrics import accuracy_score_group_min








.. GENERATED FROM PYTHON SOURCE LINES 48-49

Next, we import the data, dropping any rows which are missing data:

.. GENERATED FROM PYTHON SOURCE LINES 49-50

.. code-block:: default


    print("Hello world")



.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Hello world





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.675 seconds)


.. _sphx_glr_download_auto_examples_plot_make_derived_metric.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/Temp-FL/docs/master?filepath=/./binder-notebooks/auto_examples/plot_make_derived_metric.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_make_derived_metric.py <plot_make_derived_metric.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_make_derived_metric.ipynb <plot_make_derived_metric.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
